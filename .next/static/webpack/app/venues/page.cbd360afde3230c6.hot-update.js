"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/venues/page",{

/***/ "(app-pages-browser)/./src/lib/mockData.ts":
/*!*****************************!*\
  !*** ./src/lib/mockData.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   featuredVenues: function() { return /* binding */ featuredVenues; },\n/* harmony export */   mockVenues: function() { return /* binding */ mockVenues; }\n/* harmony export */ });\n/* harmony import */ var _venueImages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./venueImages */ \"(app-pages-browser)/./src/lib/venueImages.ts\");\n\n// Load South Florida wedding venues data from JSON with fallback\nfunction loadVenueData() {\n    try {\n        const venuesJson = __webpack_require__(/*! ../data/venues.json */ \"(app-pages-browser)/./src/data/venues.json\");\n        const venues = venuesJson.weddingVenues || [];\n        console.log(\"✅ JSON loaded successfully, venues count:\", venues.length);\n        return venues;\n    } catch (error) {\n        console.warn(\"❌ Could not load venues.json:\", error);\n        // Fallback venue data\n        return [\n            {\n                name: \"The Breakers Palm Beach\",\n                location: \"Palm Beach, FL\",\n                style: \"Luxury oceanfront resort with elegant ballrooms and impeccable service\",\n                capacity: \"50-400 guests\",\n                pricing: \"$15,000+\",\n                tags: [\n                    \"beachfront\",\n                    \"luxury\",\n                    \"ballroom\"\n                ],\n                website: \"https://www.thebreakers.com\"\n            },\n            {\n                name: \"Vizcaya Museum and Gardens\",\n                location: \"Miami, FL\",\n                style: \"Historic Italian Renaissance villa with stunning formal gardens\",\n                capacity: \"100-250 guests\",\n                pricing: \"$12,000+\",\n                tags: [\n                    \"historic\",\n                    \"garden\",\n                    \"outdoor\"\n                ],\n                website: \"https://vizcaya.org\"\n            },\n            {\n                name: \"Four Seasons Resort Palm Beach\",\n                location: \"Palm Beach, FL\",\n                style: \"Sophisticated beachfront luxury with ocean views\",\n                capacity: \"75-300 guests\",\n                pricing: \"$18,000+\",\n                tags: [\n                    \"beachfront\",\n                    \"luxury\",\n                    \"modern\"\n                ],\n                website: \"https://www.fourseasons.com\"\n            }\n        ];\n    }\n}\nconst venueData = loadVenueData();\n// Transform real venue data to match our interface\nfunction parseCapacity(capacityString) {\n    if (!capacityString || typeof capacityString !== \"string\") {\n        return {\n            min: 50,\n            max: 150\n        }; // default\n    }\n    const numbers = capacityString.match(/\\d+/g);\n    if (numbers && numbers.length >= 1) {\n        if (numbers.length === 1) {\n            const capacity = parseInt(numbers[0]);\n            return {\n                min: Math.floor(capacity * 0.5),\n                max: capacity\n            };\n        } else {\n            return {\n                min: parseInt(numbers[0]),\n                max: parseInt(numbers[numbers.length - 1])\n            };\n        }\n    }\n    return {\n        min: 50,\n        max: 150\n    }; // default\n}\nfunction parsePrice(pricingString) {\n    if (!pricingString || typeof pricingString !== \"string\") {\n        return 5000; // default\n    }\n    const priceMatch = pricingString.match(/\\$([0-9,]+)/);\n    if (priceMatch) {\n        return parseInt(priceMatch[1].replace(/,/g, \"\"));\n    }\n    return 5000; // default\n}\nfunction determineVenueType(tags) {\n    if (!Array.isArray(tags)) {\n        return \"ballroom\"; // default\n    }\n    if (tags.includes(\"beachfront\") || tags.includes(\"oceanfront\")) return \"beach\";\n    if (tags.includes(\"garden\") || tags.includes(\"outdoor\")) return \"garden\";\n    if (tags.includes(\"ballroom\")) return \"ballroom\";\n    if (tags.includes(\"historic\")) return \"historic\";\n    if (tags.includes(\"modern\")) return \"modern\";\n    if (tags.includes(\"rustic\") || tags.includes(\"barn\")) return \"rustic\";\n    return \"ballroom\"; // default\n}\n// Real phone numbers for South Florida wedding venues\nconst venuePhoneNumbers = {\n    \"Hialeah Park Racing & Casino\": \"(786) 483-7460\",\n    \"The Surfcomber Hotel\": \"(305) 532-7715\",\n    \"MB Hotel\": \"(305) 532-2800\",\n    \"Sea Watch on the Ocean\": \"(954) 781-2200\",\n    \"Emeril Lagasse Foundation Innovation Kitchen\": \"(954) 377-5425\",\n    \"Atlantic Wedding Chapel\": \"(954) 942-1119\",\n    \"Coastal Yacht Charters\": \"(954) 761-8777\",\n    \"Vizcaya Museum & Gardens\": \"(305) 250-9133\",\n    \"Ancient Spanish Monastery\": \"(305) 945-1461\",\n    \"The Cooper Estate\": \"(305) 248-4727\",\n    \"Curtiss Mansion\": \"(305) 379-4040\",\n    \"Thalatta Estate\": \"(305) 238-5800\",\n    \"Deering Estate\": \"(305) 235-1668\",\n    \"Fairchild Tropical Botanic Garden\": \"(305) 667-1651\",\n    \"Historic Walton House\": \"(305) 296-3344\",\n    \"The Biltmore Hotel\": \"(855) 311-6903\",\n    \"Four Seasons Resort Palm Beach\": \"(561) 582-2800\",\n    \"The Breakers\": \"(561) 655-6611\",\n    \"PGA National Resort & Spa\": \"(561) 627-2000\",\n    \"Eau Palm Beach Resort & Spa\": \"(561) 533-6000\",\n    \"Flagler Museum\": \"(561) 655-2833\",\n    \"Norton Museum of Art\": \"(561) 832-5196\",\n    \"Trump International Beach Resort\": \"(305) 692-5600\",\n    \"The St. Regis Bal Harbour Resort\": \"(305) 993-3300\",\n    \"The Setai Miami Beach\": \"(305) 520-6000\",\n    \"Edition Miami Beach\": \"(786) 257-4500\",\n    \"SLS Brickell\": \"(305) 239-1300\",\n    \"JW Marriott Marquis Miami\": \"(305) 421-8600\",\n    \"The Miami Beach EDITION\": \"(786) 257-4500\",\n    \"W South Beach\": \"(305) 938-3000\",\n    \"Fontainebleau Miami Beach\": \"(305) 538-2000\",\n    \"The Ritz-Carlton Key Biscayne\": \"(305) 365-4500\",\n    \"The Ritz-Carlton South Beach\": \"(786) 276-4000\",\n    \"Conrad Miami\": \"(305) 503-6500\",\n    \"InterContinental Miami\": \"(305) 577-1000\",\n    \"Mandarin Oriental Miami\": \"(305) 913-8288\",\n    \"The Alexander All Suite Oceanfront Resort\": \"(305) 865-6500\",\n    \"Acqualina Resort & Residences\": \"(305) 918-8000\",\n    \"The St. Regis Bal Harbour\": \"(305) 993-3300\",\n    \"Eden Roc Miami Beach\": \"(305) 531-0000\",\n    \"Nobu Hotel Miami Beach\": \"(305) 695-3232\",\n    \"The Palms Hotel & Spa\": \"(305) 534-0505\",\n    \"Royal Palm South Beach Miami\": \"(305) 604-5700\",\n    \"Grand Beach Hotel Surfside\": \"(305) 865-7511\",\n    \"The Confidante Miami Beach\": \"(305) 424-1234\",\n    \"Dream South Beach\": \"(305) 673-4747\",\n    \"Shore Club\": \"(305) 695-3100\",\n    \"Casa Colonial Beach & Spa\": \"(305) 673-0003\",\n    \"Hilton Bentley Miami/South Beach\": \"(305) 938-4600\",\n    \"Patch of Heaven Sanctuary\": \"(305) 246-8920\",\n    \"Redland Koi Gardens\": \"(305) 248-7750\"\n};\n// Function to get phone number for venue or generate a realistic fallback\nfunction getVenuePhone(venueName) {\n    // Check if we have a real phone number for this venue\n    if (venuePhoneNumbers[venueName]) {\n        return venuePhoneNumbers[venueName];\n    }\n    // Generate a realistic South Florida phone number (area codes: 305, 786, 954, 561)\n    const areaCode = [\n        \"305\",\n        \"786\",\n        \"954\",\n        \"561\"\n    ][Math.floor(Math.random() * 4)];\n    const exchange = Math.floor(Math.random() * 900) + 100;\n    const number = Math.floor(Math.random() * 9000) + 1000;\n    return \"(\".concat(areaCode, \") \").concat(exchange, \"-\").concat(number);\n}\n// Convert raw venue data to Venue objects\nconsole.log(\"\\uD83D\\uDD0D Processing venue data:\", venueData.length, \"venues\");\n// Sort venues by photo status first (venues with uploaded photos at top)\nconst sortedVenueData = (0,_venueImages__WEBPACK_IMPORTED_MODULE_0__.sortVenuesByPhotos)(venueData);\nconst mockVenues = sortedVenueData.filter((venue)=>venue && typeof venue === \"object\" && venue.name).map((venue, index)=>{\n    var _venue_address, _venue_location_split_, _venue_address1;\n    const venueObj = {\n        id: (index + 1).toString(),\n        name: venue.name || \"Venue \".concat(index + 1),\n        description: venue.style || venue.description || \"Beautiful wedding venue\",\n        address: {\n            street: ((_venue_address = venue.address) === null || _venue_address === void 0 ? void 0 : _venue_address.street) || \"\",\n            city: venue.location && typeof venue.location === \"string\" ? ((_venue_location_split_ = venue.location.split(\",\")[0]) === null || _venue_location_split_ === void 0 ? void 0 : _venue_location_split_.trim()) || \"Miami\" : \"Miami\",\n            state: \"FL\",\n            zipCode: ((_venue_address1 = venue.address) === null || _venue_address1 === void 0 ? void 0 : _venue_address1.zipCode) || \"33101\"\n        },\n        capacity: parseCapacity(venue.capacity),\n        pricing: {\n            startingPrice: parsePrice(venue.pricing),\n            currency: \"USD\"\n        },\n        amenities: venue.servicesAmenities || venue.amenities || [],\n        venueType: determineVenueType(venue.tags || []),\n        tags: venue.tags || [],\n        images: venue.images || [],\n        contact: {\n            email: \"info@\".concat((venue.name || \"venue\").toLowerCase().replace(/\\s+/g, \"\").replace(/[^a-z0-9]/g, \"\"), \".com\"),\n            phone: getVenuePhone(venue.name),\n            website: venue.website || undefined\n        },\n        owner: {\n            id: \"owner\".concat(index + 1),\n            name: \"Venue Manager \".concat(index + 1),\n            isPremium: Math.random() > 0.6\n        },\n        availability: {\n            isAvailable: true,\n            blackoutDates: []\n        },\n        createdAt: new Date(2024, 0, index + 1),\n        updatedAt: new Date(2024, 0, index + 1)\n    };\n    // Log which venues have uploaded photos for debugging\n    const hasPhotos = (0,_venueImages__WEBPACK_IMPORTED_MODULE_0__.hasUploadedPhotos)(venue);\n    if (hasPhotos) {\n        console.log(\"\\uD83D\\uDCF8 \".concat(venue.name, \" has uploaded photos - prioritized in listing\"));\n    }\n    return venueObj;\n});\n// Add some featured venues for the homepage (prioritize those with uploaded photos)\nfunction hasRealPhotos(venue) {\n    if (!venue.images || venue.images.length === 0) return false;\n    // Check if any image is not a placeholder\n    return venue.images.some((img)=>!img.url.includes(\"venue-placeholder.svg\") && !img.url.includes(\"placeholder\"));\n}\nconst venuesWithPhotos = mockVenues.filter((venue)=>hasRealPhotos(venue));\nconst venuesWithoutPhotos = mockVenues.filter((venue)=>!hasRealPhotos(venue));\nconst featuredVenues = [\n    ...venuesWithPhotos.slice(0, 4),\n    ...venuesWithoutPhotos.slice(0, 2) // Then 2 without photos to make 6 total\n].slice(0, 6);\nconsole.log(\"✅ mockVenues loaded successfully:\", mockVenues.length, \"venues\");\nconsole.log(\"✅ featuredVenues loaded:\", featuredVenues.length, \"venues\");\nconsole.log(\"\\uD83D\\uDCCA Photo prioritization: \".concat(venuesWithPhotos.length, \" venues with photos, \").concat(venuesWithoutPhotos.length, \" with placeholders\"));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/mockData.ts\n"));

/***/ })

});